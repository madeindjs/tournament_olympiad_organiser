#!/usr/bin/env ruby

require 'tournament_organizer'
require 'optparse'
require 'erb'
require 'yaml'
require 'json'



tournament = TournamentOrganizer::Tournament.new
output = 'yaml'


OptionParser.new do |opts|
	opts.banner = "Usage: tournament_organizer [options]"

  opts.separator ""
  opts.separator "The goal is to make a tournament where all players play each other on differents games in differents rounds (not a the same time, of course..)"
  opts.separator ""
  opts.separator "Specific options:"

  opts.on("-p", "--players PLAYERS", "Players separated by comma `,`") do |players|
    tournament.add_players *players.split(',')
  end

  opts.on("-g", "--games GAMES", "Games separated by comma `,`") do |games|
    tournament.add_games *games.split(',')
  end

  opts.on("-o", "--output-format [FORMAT]", "Ouput format (default is `YAML`)", "Can be `YAML`, `JSON`, `HTML` ") do |format|
    output = format
  end


end.parse!

if tournament.players.empty?
  puts "You must specify players"
  exit
elsif tournament.games.empty?
  puts "You must specify games"
  exit
end


case output
when 'yaml'
  puts tournament.get_organization.to_yaml
when 'json'
  puts tournament.get_organization.to_json
when 'html'
  class ERBContext
    def initialize(hash)
      hash.each_pair do |key, value|
        instance_variable_set('@' + key.to_s, value)
      end
    end

    def get_binding
      binding
    end
  end

  context = ERBContext.new({rounds: tournament.get_organization})

  erb_file_path = File.join(File.dirname(File.dirname(__FILE__)),"templates/default.html.erb")

  puts ERB.new(File.new(erb_file_path).read).result(context.get_binding)
end
  


